<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    <api-platform-gw:api apiName="Performance Tester ${env}" version="1.0" flowRef="performance-testerFlow" create="true" doc:name="API Autodiscovery"/>
    <flow name="performance-testerFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP"/>
        <logger message="This is the first step" level="INFO" doc:name="Logger"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'command'!=null]">
                <scripting:transformer doc:name="Groovy Command">
                    <scripting:script engine="Groovy"><![CDATA[def command = message.getInboundProperty('command')
def out = new StringBuilder(), err = new StringBuilder()
def process = command.execute()
process.consumeProcessOutput(out, err)
process.waitForOrKill(${sleep})

return "Output:\n" + out + "\n" + "Error:\n" + err

]]></scripting:script>
                </scripting:transformer>
            </when>
            <otherwise>
                <scripting:component doc:name="Groovy">
                    <scripting:script engine="Groovy"><![CDATA[new Micro2().main(null);]]></scripting:script>
                </scripting:component>
                <set-payload value="{
	&quot;status&quot; : &quot;OK&quot;
}" mimeType="application/json" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <logger message="This is the last step" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
